
#define AS_NO_EXCEPTIONS 1 // No rtti or exception support needed for ZC.
#define AS_NO_THREADS 1 // Useful optimization as zc is definitely not thread-safe.

#include "../include/angelscript.h"

#include "../angelscript/as_atomic.cpp"
#include "../angelscript/as_builder.cpp"
#include "../angelscript/as_bytecode.cpp"
#include "../angelscript/as_callfunc.cpp"
#include "../angelscript/as_callfunc_arm.cpp"
#include "../angelscript/as_callfunc_mips.cpp"
#include "../angelscript/as_callfunc_ppc.cpp"
#include "../angelscript/as_callfunc_ppc_64.cpp"
#include "../angelscript/as_callfunc_sh4.cpp"
#include "../angelscript/as_callfunc_x64_gcc.cpp"
#include "../angelscript/as_callfunc_x64_mingw.cpp"
#include "../angelscript/as_callfunc_x64_msvc.cpp"
#include "../angelscript/as_callfunc_x86.cpp"
#include "../angelscript/as_callfunc_xenon.cpp"
#include "../angelscript/as_compiler.cpp"
#include "../angelscript/as_configgroup.cpp"
#include "../angelscript/as_context.cpp"
#include "../angelscript/as_datatype.cpp"
#include "../angelscript/as_gc.cpp"
#include "../angelscript/as_generic.cpp"
#include "../angelscript/as_globalproperty.cpp"
#include "../angelscript/as_memory.cpp"
#include "../angelscript/as_module.cpp"
#include "../angelscript/as_objecttype.cpp"
#include "../angelscript/as_outputbuffer.cpp"
#include "../angelscript/as_parser.cpp"
#include "../angelscript/as_restore.cpp"
#include "../angelscript/as_scriptcode.cpp"
#include "../angelscript/as_scriptengine.cpp"
#include "../angelscript/as_scriptfunction.cpp"
#include "../angelscript/as_scriptnode.cpp"
#include "../angelscript/as_scriptobject.cpp"
#include "../angelscript/as_string.cpp"
#include "../angelscript/as_string_util.cpp"
#include "../angelscript/as_thread.cpp"
#include "../angelscript/as_tokenizer.cpp"
#include "../angelscript/as_typeinfo.cpp"
#include "../angelscript/as_variablescope.cpp"
